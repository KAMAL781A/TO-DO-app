<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        input {
            width: 70%;
            padding: 10px;
            margin-bottom: 10px;
        }

        button {
            padding: 10px;
            background-color: #4caf50;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            background-color: #dff0d8;
            padding: 10px;
            margin-bottom: 5px;
            border-radius: 4px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        li span {
            flex-grow: 1;
        }

        .completed {
            text-decoration: line-through;
            color: #aaa;
        }
    </style>
    <title>TO-DO App</title>
</head>
<body>
    <div class="container">
        <h1>TO-DO App</h1>
        <input type="text" id="taskInput" placeholder="Add a new task">
        <button onclick="addTask()">Add Task</button>
        <ul id="taskList"></ul>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            loadTasks();
        });

        function loadTasks() {
            const taskList = document.getElementById("taskList");
            taskList.innerHTML = "";

            const tasks = JSON.parse(localStorage.getItem("tasks")) || [];

            tasks.forEach(function (task) {
                addTaskToDOM(task);
            });
        }

        function addTask() {
            const taskInput = document.getElementById("taskInput");
            const taskText = taskInput.value.trim();

            if (taskText !== "") {
                const task = { text: taskText, completed: false };

                // Get existing tasks from localStorage
                const tasks = JSON.parse(localStorage.getItem("tasks")) || [];

                // Add the new task
                tasks.push(task);

                // Save updated tasks to localStorage
                localStorage.setItem("tasks", JSON.stringify(tasks));

                // Add the new task to the DOM
                addTaskToDOM(task);

                // Clear the input field
                taskInput.value = "";
            }
        }

        function addTaskToDOM(task) {
            const taskList = document.getElementById("taskList");
            const li = document.createElement("li");
            const span = document.createElement("span");
            const deleteButton = document.createElement("button");

            span.innerText = task.text;
            deleteButton.innerText = "Delete";
            deleteButton.addEventListener("click", function () {
                deleteTask(task);
            });

            li.appendChild(span);
            li.appendChild(deleteButton);

            if (task.completed) {
                li.classList.add("completed");
            }

            li.addEventListener("click", function () {
                toggleTaskStatus(task);
            });

            taskList.appendChild(li);
        }

        function toggleTaskStatus(task) {
            task.completed = !task.completed;

            // Get existing tasks from localStorage
            const tasks = JSON.parse(localStorage.getItem("tasks")) || [];

            // Find the index of the task to update
            const index = tasks.findIndex((t) => t.text === task.text);

            // Update the task in the array
            tasks[index] = task;

            // Save updated tasks to localStorage
            localStorage.setItem("tasks", JSON.stringify(tasks));

            // Reload tasks in the DOM
            loadTasks();
        }

        function deleteTask(task) {
            // Get existing tasks from localStorage
            const tasks = JSON.parse(localStorage.getItem("tasks")) || [];

            // Remove the task from the array
            const updatedTasks = tasks.filter((t) => t.text !== task.text);

            // Save updated tasks to localStorage
            localStorage.setItem("tasks", JSON.stringify(updatedTasks));

            // Reload tasks in the DOM
            loadTasks();
        }
    </script>
</body>
</html>
